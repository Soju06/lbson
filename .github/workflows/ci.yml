name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  test:
    name: Test on ${{ matrix.os }}-${{ matrix.arch }} with Python ${{ matrix.python-version }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-24.04, windows-2025, macos-15, macos-13]
        python-version: ["3.9", "3.10", "3.11", "3.12", "3.13"]
        arch: [x64]
        include:
          # Ubuntu ARM64 (Public preview)
          - os: ubuntu-24.04-arm
            arch: arm64
            python-version: "3.9"
          - os: ubuntu-24.04-arm
            arch: arm64
            python-version: "3.10"
          - os: ubuntu-24.04-arm
            arch: arm64
            python-version: "3.11"
          - os: ubuntu-24.04-arm
            arch: arm64
            python-version: "3.12"
          - os: ubuntu-24.04-arm
            arch: arm64
            python-version: "3.13"
          # Windows ARM64 (Public preview)
          - os: windows-11-arm
            arch: arm64
            python-version: "3.9"
          - os: windows-11-arm
            arch: arm64
            python-version: "3.10"
          - os: windows-11-arm
            arch: arm64
            python-version: "3.11"
          - os: windows-11-arm
            arch: arm64
            python-version: "3.12"
          - os: windows-11-arm
            arch: arm64
            python-version: "3.13"


    steps:
    - name: 🔄 Checkout repository
      uses: actions/checkout@v4

    - name: 🐍 Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}
        architecture: ${{ matrix.arch }}

    - name: 📦 Cache pip dependencies
      uses: actions/cache@v4
      with:
        path: |
          ~/.cache/pip
          ~/AppData/Local/pip/Cache
          ~/Library/Caches/pip
        key: ${{ runner.os }}-${{ matrix.arch }}-pip-${{ matrix.python-version }}-${{ hashFiles('pyproject.toml') }}
        restore-keys: |
          ${{ runner.os }}-${{ matrix.arch }}-pip-${{ matrix.python-version }}-
          ${{ runner.os }}-${{ matrix.arch }}-pip-

    - name: 🔧 Install system dependencies (Linux)
      if: startsWith(matrix.os, 'ubuntu')
      run: |
        sudo apt-get update
        sudo apt-get install -y build-essential cmake

    - name: 🔧 Install system dependencies (macOS)
      if: startsWith(matrix.os, 'macos')
      run: |
        brew install cmake

    - name: 🔧 Install system dependencies (Windows)
      if: startsWith(matrix.os, 'windows')
      run: |
        choco install cmake --installargs 'ADD_CMAKE_TO_PATH=System'
        choco install make

    - name: ⬆️ Upgrade pip
      run: |
        python -m pip install --upgrade pip

    - name: 🏗️ Build package
      run: |
        make build-test

    - name: ✅ Test import
      run: |
        python -c "import lbson; print('Import successful')"

    - name: 🧪 Run tests
      run: |
        make test

    - name: 📊 Upload test results
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: test-results-${{ matrix.os }}-${{ matrix.arch }}-py${{ matrix.python-version }}
        path: |
          .pytest_cache/
          *.log

  # Summary job with table format
  test-summary:
    name: 📊 Test Results Summary
    runs-on: ubuntu-24.04
    needs: [test]
    if: always()
    steps:
    - name: 📊 Generate test results table
      run: |
        echo "## 📊 Test Results Summary" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "| Python Version | ubuntu-24.04 (x64) | ubuntu-24.04-arm (arm64) | windows-2025 (x64) | windows-11-arm (arm64) | macos-15 (arm64) | macos-13 (x64) |" >> $GITHUB_STEP_SUMMARY
        echo "|----------------|---------------------|---------------------------|---------------------|------------------------|-------------------|-----------------|" >> $GITHUB_STEP_SUMMARY

        # Parse matrix job results
        RESULTS='${{ toJson(needs.test.result) }}'

        for version in "3.9" "3.10" "3.11" "3.12" "3.13"; do
          echo -n "| Python $version |" >> $GITHUB_STEP_SUMMARY

          # Show results for each platform
          # Since GitHub Actions doesn't provide granular matrix results easily,
          # we'll show the overall status for now
          for i in {1..6}; do
            if [[ "${{ needs.test.result }}" == "success" ]]; then
              echo -n " ✅ |" >> $GITHUB_STEP_SUMMARY
            elif [[ "${{ needs.test.result }}" == "failure" ]]; then
              echo -n " ❌ |" >> $GITHUB_STEP_SUMMARY
            elif [[ "${{ needs.test.result }}" == "cancelled" ]]; then
              echo -n " ⏸️ |" >> $GITHUB_STEP_SUMMARY
            elif [[ "${{ needs.test.result }}" == "skipped" ]]; then
              echo -n " ⏭️ |" >> $GITHUB_STEP_SUMMARY
            else
              echo -n " ⏳ |" >> $GITHUB_STEP_SUMMARY
            fi
          done
          echo "" >> $GITHUB_STEP_SUMMARY
        done

        echo "" >> $GITHUB_STEP_SUMMARY
        echo "### 📋 Test Matrix Coverage:" >> $GITHUB_STEP_SUMMARY
        echo "- **Total test combinations**: 30 (5 Python versions × 6 platforms)" >> $GITHUB_STEP_SUMMARY
        echo "- **Ubuntu 24.04 (x64)**: Python 3.9, 3.10, 3.11, 3.12, 3.13" >> $GITHUB_STEP_SUMMARY
        echo "- **Ubuntu 24.04 ARM (arm64)**: Python 3.9, 3.10, 3.11, 3.12, 3.13" >> $GITHUB_STEP_SUMMARY
        echo "- **Windows 2025 (x64)**: Python 3.9, 3.10, 3.11, 3.12, 3.13" >> $GITHUB_STEP_SUMMARY
        echo "- **Windows 11 ARM (arm64)**: Python 3.9, 3.10, 3.11, 3.12, 3.13" >> $GITHUB_STEP_SUMMARY
        echo "- **macOS 15 (ARM64/M-series)**: Python 3.9, 3.10, 3.11, 3.12, 3.13" >> $GITHUB_STEP_SUMMARY
        echo "- **macOS 13 (Intel)**: Python 3.9, 3.10, 3.11, 3.12, 3.13" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY

        echo "### 🏁 Overall Status:" >> $GITHUB_STEP_SUMMARY
        echo "- **Test Results**: ${{ needs.test.result }}" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY

        if [[ "${{ needs.test.result }}" == "success" ]]; then
          echo "✅ **All tests completed successfully across all platforms!**" >> $GITHUB_STEP_SUMMARY
          echo "🎉 **Cross-platform compatibility confirmed.**" >> $GITHUB_STEP_SUMMARY
        elif [[ "${{ needs.test.result }}" == "failure" ]]; then
          echo "❌ **Some tests failed. Please check individual job results for details.**" >> $GITHUB_STEP_SUMMARY
          echo "🔍 **Review failed platforms and Python versions for debugging.**" >> $GITHUB_STEP_SUMMARY
          exit 1
        elif [[ "${{ needs.test.result }}" == "cancelled" ]]; then
          echo "⏸️ **Tests were cancelled.**" >> $GITHUB_STEP_SUMMARY
          exit 1
        else
          echo "⏳ **Tests are still running or in an unknown state.**" >> $GITHUB_STEP_SUMMARY
        fi

        echo "" >> $GITHUB_STEP_SUMMARY
        echo "### 📖 Legend:" >> $GITHUB_STEP_SUMMARY
        echo "- ✅ **Success**" >> $GITHUB_STEP_SUMMARY
        echo "- ❌ **Failed**" >> $GITHUB_STEP_SUMMARY
        echo "- ⏸️ **Cancelled**" >> $GITHUB_STEP_SUMMARY
        echo "- ⏭️ **Skipped**" >> $GITHUB_STEP_SUMMARY
        echo "- ⏳ **In Progress/Unknown**" >> $GITHUB_STEP_SUMMARY 